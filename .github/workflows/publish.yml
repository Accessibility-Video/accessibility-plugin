name: publish

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js for publish
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Create build
        run: |
          npm run build

      - name: Pack chrome extension
        run: |
          cd dist && zip -r -FS ../Package.zip *

      - name: Upload and publish to chrome store
        env:
          CHROME_WEB_STORE_APP_ID: ${{ secrets.CHROME_WEB_STORE_APP_ID }}
          CHROME_WEB_STORE_CLIENT_ID: ${{ secrets.CHROME_WEB_STORE_CLIENT_ID }}
          CHROME_WEB_STORE_CLIENT_SECRET: ${{ secrets.CHROME_WEB_STORE_CLIENT_SECRET }}
          CHROME_WEB_STORE_REFRESH_TOKEN: ${{ secrets.CHROME_WEB_STORE_REFRESH_TOKEN }}
        run: |
          ACCESS_TOKEN=$(curl -X POST https://oauth2.googleapis.com/token -d "client_id=$CHROME_WEB_STORE_CLIENT_ID&client_secret=$CHROME_WEB_STORE_CLIENT_SECRET&refresh_token=$CHROME_WEB_STORE_REFRESH_TOKEN&grant_type=refresh_token" | jq '.access_token' -r)
          curl --fail -H "Authorization: Bearer $ACCESS_TOKEN" -H "x-goog-api-version: 2" -X PUT -T Package.zip https://www.googleapis.com/upload/chromewebstore/v1.1/items/$CHROME_WEB_STORE_APP_ID
          curl --fail -H "Authorization: Bearer $ACCESS_TOKEN" -H "x-goog-api-version: 2" -H "Content-Length: 0" -H "Expect:" -X GET https://www.googleapis.com/chromewebstore/v1.1/items/$CHROME_WEB_STORE_APP_ID?projection=draft
          curl --fail -H "Authorization: Bearer $ACCESS_TOKEN" -H "x-goog-api-version: 2" -H "Content-Length: 0" -X POST https://www.googleapis.com/chromewebstore/v1.1/items/$CHROME_WEB_STORE_APP_ID/publish

      - name: Drop chrome artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "Chrome Artifacts"
          path: ./dist
          if-no-files-found: error

      - name: Create firefox build
        run: |
          rm Package.zip
          ./firefoxfy.sh

      - name: Pack firefox extension
        run: |
          cd dist && zip -r -FS ../Package.zip *

      - name: Upload and publish to firefox store
        env:
          FIREFOX_STORE_APP_ID: ${{ secrets.FIREFOX_STORE_APP_ID }}
          FIREFOX_STORE_JWT_ISSUER: ${{ secrets.FIREFOX_STORE_JWT_ISSUER }}
          FIREFOX_STORE_JWT_SECRET: ${{ secrets.FIREFOX_STORE_JWT_SECRET }}
        run: |
          VERSION_NUMBER=$(jq -r .version ./src/manifest.json)
          ACCESS_TOKEN=$(npx jwtgen -a HS256 -s ${FIREFOX_STORE_JWT_SECRET} -c "iss=${FIREFOX_STORE_JWT_ISSUER}" -e 300)
          curl --fail -H "Authorization: JWT ${ACCESS_TOKEN}" -g -XPUT --form "upload=@Package.zip" "https://addons.mozilla.org/api/v4/addons/${FIREFOX_STORE_APP_ID}/versions/${VERSION_NUMBER}/"

      - name: Drop firefox artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "Firefox Artifacts"
          path: ./dist
          if-no-files-found: error
